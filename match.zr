enum Result {
  Ok,
  Err,
}

func divide(a, b) {
  if b == 0 {
    return Result.Err("Cannot divide by 0");
  }

  return Result.Ok(a / b);
}

let value = divide(1, 0);

if value is Result.Err {
  print("Error!: " + value);
} else {
  print(value);
}

/*let value = returns_result(1, 0).^; // this is now the ok 
let value = returns_exception(1, 0)!; // this is now the result
let value = returns_exception(1, 0)!.^; // this is now the ok 

let value = returns_reslt(1, 0).^;
let value = catch { returns_exception(1, 0); };
let value = catch { returns_exception(1, 0); }.^;
let value = catch { a.b.c; }; // Used for turning object access into Result<>

let value = returns_result(1).^;
let value = returns_exception(1)!;
let value = returns_exception(1)!.^;
let value = a.b.c!.^;*/